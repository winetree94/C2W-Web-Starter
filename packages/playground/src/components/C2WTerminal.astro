---
interface Props {
  imageName: string;
}

const props = Astro.props as Props;
---

<div id="terminal" class="terminal" data-image-name={props.imageName}>
</div>
<style>
  #terminal {
    height: 408px;
  }
</style>
<script>
  import { c2wTerminal } from "@c2w/browser_runtime";
  import chunks from './chunks.json';

  const root = document.getElementById("terminal") as HTMLDivElement;
  const imageName = root.dataset.imageName as string;

  const image = chunks[imageName as keyof typeof chunks];
  const imageWorker = new Worker(
    new URL("@c2w/browser_runtime/workers/worker.js", import.meta.url),
    {
      type: "module",
    }
  );
  const imageWasmPaths = image.chunks.map((chunk) => `/wasms/${chunk}`);
  const networkWorker = new Worker(
    new URL("@c2w/browser_runtime/workers/stack-worker.js", import.meta.url),
    {
      type: "module",
    }
  );

  c2wTerminal({
    parentElement: root,
    networkMode: 'browser',
    imageWorker: imageWorker,
    imageWasmPaths: imageWasmPaths,
    networkWorker: networkWorker,
    networkWasmPaths: ["/wasms/c2w-net-proxy.wasm"],
  });
</script>
